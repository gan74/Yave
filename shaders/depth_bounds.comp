#version 460

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0) uniform sampler2D in_depth;
layout(rg32f, set = 0, binding = 1) uniform writeonly image2D out_minmax;

shared uint shared_min;
shared uint shared_max;

void main() {
    if(gl_LocalInvocationIndex == 0) {
        shared_min = 0xFFFFFFFF;
        shared_max = 0x00000000;
    }

    barrier();

    const ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    const ivec2 size = textureSize(in_depth, 0);

    const float depth = texelFetch(in_depth, coord, 0).x;
    const uint udepth = floatBitsToUint(depth);

    if(coord.x < size.x && coord.y < size.y) {
        atomicMin(shared_min, udepth);
        atomicMax(shared_max, udepth);
    }

    barrier();
    if(gl_LocalInvocationIndex == 0) {
        const vec2 min_max = vec2(uintBitsToFloat(shared_min), uintBitsToFloat(shared_max));
        imageStore(out_minmax, ivec2(gl_WorkGroupID.xy), vec4(min_max, 0.0, 0.0));
    }

}

